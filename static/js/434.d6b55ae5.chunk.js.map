{"version":3,"file":"static/js/434.d6b55ae5.chunk.js","mappings":"2MAuBA,EAjB2C,SAAC,GAAkB,IAAjBA,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,KAQjD,OACE,iCACE,wBAAKD,IAPAC,EAAKC,KAAI,SAACC,EAAMC,GACnB,OAAO,uBAAYD,GAAJC,UCyEvB,EA5E8B,WAE5B,IACMC,GADUC,EAAAA,EAAAA,YAAWC,EAAAA,GACEC,MAAMC,SAASC,YAE5C,GAAgCC,EAAAA,EAAAA,WAAS,GAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KAYA,OAJAC,EAAAA,EAAAA,YAAU,YANU,WAClB,IAAIC,EAAcC,OAAOC,WAELJ,EAApBE,EAAc,KAIdG,KACC,KAGD,qBAASC,GAAG,aAAaC,UAAU,aAAnC,WACE,gBAAKA,UAAU,qCAAf,UACE,0BACGf,EAAagB,MADhB,KACuB,iBAAMD,UAAU,MAAhB,qBAGzB,iBAAKA,UAAU,+BAAf,WACE,iBAAKA,UAAU,sCAAf,WACE,gBAAKA,UAAU,YACf,gBAAKA,UAAU,mBAAf,UACE,SAAC,IAAD,CACEE,UAAU,uBACVC,aAAa,EAFf,UAII,SAAC,EAAD,CACIvB,KAAMK,EAAamB,WAAWxB,KAC9BC,KAAMI,EAAamB,WAAWvB,eAM1C,iBAAKmB,UAAU,qCAAf,WACE,gBAAKA,UAAU,YACf,gBAAKA,UAAU,mBAAf,UACE,SAAC,IAAD,CACEE,UACEV,EAAQ,6CAEVW,aAAa,EAJf,UAMI,SAAC,EAAD,CACIvB,KAAMK,EAAaoB,WAAWzB,KAC9BC,KAAMI,EAAaoB,WAAWxB,eAM1C,iBAAKmB,UAAU,sCAAf,WACE,gBAAKA,UAAU,YACf,gBAAKA,UAAU,mBAAf,UACE,SAAC,IAAD,CACEE,UAAU,uBACVC,aAAa,EAFf,UAII,SAAC,EAAD,CACIvB,KAAMK,EAAaqB,WAAW1B,KAC9BC,KAAMI,EAAaqB,WAAWzB,sB,8FCxD5C0B,EAAgB,CAClBnB,MAAO,CACHoB,SAAU,QACVnB,SAAUoB,GAEdC,SAAU,cAIRvB,GAAcwB,EAAAA,EAAAA,eAAgCJ,GAG9CK,EAAgC,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACvC,GAA0BtB,EAAAA,EAAAA,UAASgB,EAAcnB,OAAjD,eAAOA,EAAP,KAAcsB,EAAd,KACA,OACE,SAACvB,EAAY2B,SAAb,CACEC,MAAO,CACL3B,MAAAA,EACAsB,SAAAA,GAHJ,SAMGG,KAMP,O","sources":["components/Experience/Experience.tsx","components/Experience/index.tsx","components/context/AppContext.tsx"],"sourcesContent":["import React from \"react\";\r\ninterface IExperience{\r\n  year: string\r\n  text: string[]  \r\n}\r\n\r\nconst Experience: React.FC <IExperience> = ({year, text}) => {\r\n  \r\n  const renderExperience = () => {\r\n    return text.map((item, i) => {        \r\n        return <p key={i}>{item}</p>      \r\n    })\r\n  }\r\n\r\n  return(\r\n    <>\r\n      <h2>{year}</h2>\r\n      {renderExperience()}\r\n    </>\r\n  )\r\n\r\n}\r\n\r\nexport default Experience;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { AnimationOnScroll } from \"react-animation-on-scroll\";\r\nimport UserContext from \"../context/AppContext\";\r\n\r\n\r\nimport Experience from \"./Experience\";\r\n\r\nconst Experiences: React.FC = () => {\r\n\r\n  const context = useContext(UserContext)\r\n  const MExperiences = context.state.messages.Experiences \r\n  \r\n  const [isMobile, setIsMobile] = useState(false);\r\n\r\n  const windowWidth = () => {\r\n    let screenWidth = window.innerWidth;\r\n\r\n    screenWidth < 768 ? setIsMobile(true) : setIsMobile(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    windowWidth();\r\n  }, []);\r\n\r\n  return (\r\n    <section id=\"experience\" className=\"experience\">\r\n      <div className=\"d-flex justify-content-center my-5\">\r\n        <h1>\r\n          {MExperiences.title} <span className=\"dot\">.</span>\r\n        </h1>\r\n      </div>\r\n      <div className=\"container experience-wrapper\">\r\n        <div className=\"timeline-block timeline-block-right\">\r\n          <div className=\"marker\"></div>\r\n          <div className=\"timeline-content\">\r\n            <AnimationOnScroll\r\n              animateIn=\"animate__fadeInRight\"\r\n              animateOnce={true}\r\n            >\r\n                <Experience\r\n                    year={MExperiences.experiece1.year}\r\n                    text={MExperiences.experiece1.text}                   \r\n                />\r\n            </AnimationOnScroll>\r\n          </div>\r\n        </div>\r\n        {/* - */}\r\n        <div className=\"timeline-block timeline-block-left\">\r\n          <div className=\"marker\"></div>\r\n          <div className=\"timeline-content\">\r\n            <AnimationOnScroll\r\n              animateIn={\r\n                isMobile ? `animate__fadeInRight` : `animate__fadeInLeft`\r\n              }\r\n              animateOnce={true}\r\n            >\r\n                <Experience\r\n                    year={MExperiences.experiece2.year}\r\n                    text={MExperiences.experiece2.text}                     \r\n                />\r\n            </AnimationOnScroll>\r\n          </div>\r\n        </div>\r\n        {/* - */}\r\n        <div className=\"timeline-block timeline-block-right\">\r\n          <div className=\"marker\"></div>\r\n          <div className=\"timeline-content\">\r\n            <AnimationOnScroll\r\n              animateIn=\"animate__fadeInRight\"\r\n              animateOnce={true}\r\n            >\r\n                <Experience\r\n                    year={MExperiences.experiece3.year}\r\n                    text={MExperiences.experiece3.text}                    \r\n                />\r\n            </AnimationOnScroll>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Experiences  ;\r\n","import React, { createContext, useState } from \"react\";\r\nimport messages_br from \"../../messages/texts-pt-br.json\"\r\n\r\n\r\n// user props type\r\ntype UserType = {\r\n  language: string\r\n  messages: any\r\n}\r\n\r\n// context props type\r\ntype PropsUserContext ={\r\n  state: UserType,\r\n  setState: React.Dispatch<React.SetStateAction<UserType>>\r\n}\r\n\r\n//initial state value\r\nconst DEFAULT_VALUE = {\r\n    state: {\r\n        language: \"pt-BR\",\r\n        messages: messages_br,\r\n    },\r\n    setState: () => {},\r\n}\r\n\r\n//create context\r\nconst UserContext = createContext<PropsUserContext>(DEFAULT_VALUE);\r\n\r\n//function to change language of the context\r\nconst UserContextProvider: React.FC = ({ children }) => {\r\n  const [state, setState] = useState(DEFAULT_VALUE.state);\r\n  return (\r\n    <UserContext.Provider\r\n      value={{\r\n        state,\r\n        setState,\r\n      }}\r\n    >\r\n      {children}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n\r\nexport { UserContextProvider };\r\nexport default UserContext;"],"names":["year","text","map","item","i","MExperiences","useContext","UserContext","state","messages","Experiences","useState","isMobile","setIsMobile","useEffect","screenWidth","window","innerWidth","windowWidth","id","className","title","animateIn","animateOnce","experiece1","experiece2","experiece3","DEFAULT_VALUE","language","messages_br","setState","createContext","UserContextProvider","children","Provider","value"],"sourceRoot":""}